#+STARTUP: overview
#+TAGS: 软件包(a) 
linux-base
[[./all-in-one.org]]
* 软件包管理 
** 配置文件的解释
*** 源列表是/etc/apt/source.list的配置文件。
    一个典型的/etc/apt/source.list如下：（前两行是模版，后面的是本机的配置文件）
#+begin_example
    deb http://site.example.com/debian distribution component1 component2 component3
    deb-src http://site.example.com/debian distribution component1 component2 component3
    
    deb http://security.ubuntu.com/ubuntu precise-security main restricted
    deb-src http://security.ubuntu.com/ubuntu precise-security main restricted
    deb http://security.ubuntu.com/ubuntu precise-security universe
    deb-src http://security.ubuntu.com/ubuntu precise-security universe
    deb http://security.ubuntu.com/ubuntu precise-security multiverse
    deb-src http://security.ubuntu.com/ubuntu precise-security multiverse
#+end_example
    - 以 *deb* 开头代表编译好的包， *deb-src* 代表源代码。
    - *distribution* 代表发行版本，比如下面的 precise-security。
    - *compenent* 的说明：
      | *main*       | Officailly supported software                                       |
      | *restricted* | Supported software that is not available under a complete license   |
      | *universe*   | Communnity maintained software,i.e.not offically supported software |
      | *multiverse* | Software that is not free                                           |
*** apt的缓存文件/var/lib/apt/lists
    - 更改了/etc/apt/source.list，需要用 ~apt-get update~ 更新index。更新的index文件在 /var/lib/apt/lists里。
    - apt-cache是一个软件包管理工具，可以查询apt的二进制包软件 *缓存文件* 。实际上查询的是
      /var/lib/apt/lists文件夹中的各个文档的信息。
** 安装ppa
   PPA，表示 Personal Package Archives，也就是个人软件包集。
   有很多软件因为种种原因，不能进入官方的 Ubuntu 软件仓库。 为了方便 Ubuntu 用户使用，launchpad.net 提供了 ppa，允许用户建立自己的软件仓库，
   自由的上传软件。PPA 也被用来对一些打算进入 Ubuntu 官方仓库的软件，或者某些软件的新版本进行测试。
   PPA 上的软件极其丰富，如果 Ubuntu 官方仓库中缺少您需要的某款软件，可以去 PPA 上找找看。
   一个典型的例子如下：
#+begin_example
   $ sudo add-apt-repository ppa:wiznote-team
   $ sudo apt-get update
   $ sudo apt-get install wiznote
#+end_example
** 软件包管理命令
*** apt常用操作
    1. 更新特定的包
       在apt-get命令中的“install”选项后面接上“--only-upgrade"来
       更新一个特定的包
       ~sudo apt-get install emacs --only-upgrade~
    2. 对系统所有的软件进行升级，之前一直跟刷新源列表的命令搞混.
       ~sudo apt-get upgrade~
    3. 卸载软件
       ~sudo apt-get remove package~
    4. 卸载软件，并删除配置文件
       ~sudo apt-get --purge remove package~
    5. 三个命令的区别：
   | apt-get update       | 更新软件列表,更改源列表后使用，更新的是index |
   | apt-get upgrade      | 更新软件                                 |
   | apt-get dist-upgrade | 更新系统版本                           |
*** dpkg常用操作，针对下载下来的二进制包
    1. 该命令最常用的功能就是安装deb包。
       ~sudo dpkg -i pakagename.deb~
       即可安装deb包。
    2. 卸载软件
       ~dpkg -r package~
    3. 卸载并删除配置文件
       ~dpkg -P package~

*** apt-cache
    1. 获取包的相关信息，如说明，大小，版本等。
       ~apt-cache show package~
    2. 搜索软件包，可用正则表达式
       ~apt-cache search package~
    3. 显示软件包的安装状态和版本信息
       ~apt-cache policy package_name~
* 网络
** 配置TCP/IP
   ifconfig可以查看和设置网络设备的TCP/IP参数，包括IP地址，子网掩码等。
#+begin_src sh
  sudo ifconfig eth0 192.168.2.2 netmask 255.255.255.0  设置网卡eth0的IP地址和子网掩码(netmask) 
#+end_src
** DNS
*** 简介
**** 网络中的资源及其ip地址
     网络中的资源是通过一台台称为“服务器”的计算机来提供的。为了使用户更方便的访问这些资源，一个专门的机构给这些服务器分配了不同的地址。
     为了方便管理，这些地址被限制为四组均小于255的数字，如192.168.2.2，这些地址被称为 *IP地址* 。
**** DNS服务器
     *IP地址* 虽然对于网络设备来说容易管理，但对于人来说不太“友好”。为了解决这个问题互联网管理机构又增加了一种专门的服务器，将这些
     IP地址转换为人类友好的字符地址，如将64.233.189.147转换为www.google.com。
**** 如何解析
     当用户输入文字地址，如www.google.com，然后发送，该地址信息被送到DNS服务器，服务器在表格中查询www.google.com，得到该地址对应的IP
     地址，如64.233.189.147,然后重新定向到实际IP地址，完成DNS转换。
*** Ubuntu的DNS
    对于Ubuntu而言，其也在系统内部维护了一个DNS服务器，这样就可以不用经过外部DNS服务器就完成域名到IP地址的转换.
*** 配置文件
**** /etc/host.conf 
     指定如何解析主机名。
#+begin_example 
    # The "order" line is only used by old versions of the C library.
    order hosts,bind
    multi on
#+end_example
    order指定查询顺序。本列是指先使用etc/hosts查询，然后用DNS服务。
**** /etc/resolv.conf 
     据说是主要配置文件，但我没看懂
**** /etc/hostname
     设置系统主机名
**** /etc/hosts
#+begin_example 
     127.0.0.1	localhost
     127.0.1.1	renzhuonihao
     
# The following lines are desirable for IPv6 capable hosts
     ::1     ip6-localhost ip6-loopback
     fe00::0 ip6-localnet
     ff00::0 ip6-mcastprefix
     ff02::1 ip6-allnodes
     ff02::2 ip6-allrouters
#+end_example
     设置一个简单的DNS表格，可以处理本机简单的DNS服务。
     可以将一些常用网站的IP地址加入该文件中，在输入网址后由本机完成DNS转换，不用连接到外部DNS服务器上，这样可以提高网络性能。
#+begin_example
   # IP地址              主机名      别名  
     64.233.189.104 www.google.com google
     220.181.43.121 mp3.baidu.com mp3
#+end_example
     _org模式下插入例子，输入 <e ,按TAB即可._
*** nslookup
    查询DNS服务器中域名与IP地址的映射关系。这个在配置个人的DNS时很有用。
    可以查询常用网址，然后将得到的结果加入到/etc/hosts中去。

** ssh服务
*** 服务器的架设
    (1) 安装SSH服务器软件，这里用openssh-server软件作为SSH服务器。
#+begin_src sh
    sudo apt-get install openssh-server
#+end_src
    (2) 启动SSH服务
#+begin_src sh
    sudo /etc/init.d/ssh start
#+end_src
    (3) 配置使性能提升。配置文件为/etc/ssh/sshd_config.
#+begin_example
    Port 22    采用的端口号。
    Protocol 2 采用的ssh协议的版本。
#+end_example
*** 登录到ssh服务器。
    使用ssh命令登录到ssh服务器为192.168.1.1。假设SSH服务器上有一个名为west的用户。
#+begin_src sh
    ssh west 192.168.1.1
#+end_src
    剩下的自由发挥。
*** 分发ssh密钥
1. 生成密钥
   在分发前，应该先生成密钥。生成密钥的命令时ssh-keygen.
#+begin_src sh
   ssh-keygen -d    -d参数表示生成SSH2.0版本的密钥。
#+end_src 
2. 输入要保存密钥的目录，默认是用户的主目录，也可以自行设定。
3. 给密钥加密解密的，没看懂。
4. 生成完会显示一些信息。
5. 在SSH *服务器* 用户主目录中，建立一个名为.ssh 的目录。
#+begin_src sh
   mkdir ~/.ssh
#+end_src
6. 将公钥放入上一步建立的目录中。
7. 修改服务器中密钥的访问权限为仅root可读写。
#+begin_src sh 
   chmod 600 blog_dsa.pub
#+end_src
   SSH服务器的要求。
8. 将密钥的文件名改为authorized_key
#+begin_src sh
   mv blog_dsa.pub authorized_key
#+end_src
   这个也是SSH服务器的要求
9. 登录验证
   
